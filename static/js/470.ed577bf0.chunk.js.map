{"version":3,"file":"static/js/470.ed577bf0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","page/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\nimport { Alert, AlertIcon, AlertTitle, Button, Input} from '@chakra-ui/react'\nimport { error } from 'redux/selector';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isError = useSelector(error)\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n       {isError && <Alert status='error'>\n      <AlertIcon className={css.error} />\n          <AlertTitle>The data is entered incorrectly!</AlertTitle>\n      </Alert>}\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <Input className={css.input}  type=\"text\" name=\"name\" />\n      </label>\n      <label className={css.label}>\n        Email\n        <Input className={css.input}  type=\"email\" name=\"email\" />\n      </label>\n      <label className={css.label}>\n        Password\n        <Input className={css.input}  type=\"password\" name=\"password\" />\n      </label>\n      <Button className={css.btn} colorScheme='teal' size='sm' type=\"submit\">Register</Button>\n    </form>\n    </>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\n\n\n\nexport default function Register()  {\n    return (\n      <div>\n        <RegisterForm/>\n      </div>\n);\n}","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["RegisterForm","dispatch","useDispatch","isError","useSelector","error","status","className","css","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","I","type","colorScheme","size","Register","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","_a","_b","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_c","disabled","readOnly","required","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className"],"sourceRoot":""}