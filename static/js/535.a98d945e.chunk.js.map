{"version":3,"file":"static/js/535.a98d945e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/page/Contacts.module.css?d36f","page/Contacts.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"conteinet\":\"Contact_conteinet__PyW98\"};","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contactc/operations\";\nimport Example from \"components/loading/loading\";\nimport { filterSelector, isLoadingSelector, newContactSelector } from \"redux/selector\";\nimport css from './Contact.module.css';\nimport { Button, Link } from '@chakra-ui/react';\n\nexport const Contact = () => {\n    \n    const dispatch = useDispatch()\n    const isLoading = useSelector(isLoadingSelector)\n    const filter = useSelector(filterSelector)\n    const contacts = useSelector(newContactSelector)\n    \n    return (\n        <div className={css.conteinet}>\n          {isLoading &&  <Example type={'balls'} color={'red'}/>}\n             {filter === '' && (\n            <ul>\n                {contacts.map(({ name, id, number }) => ( \n                    <li key={id}>\n                        <div>\n                        {name}: <Link color='teal.500' href={\"tel:\" + number}>{number}</Link>\n                        </div>\n                        <Button colorScheme='red' size='sm' type='button' onClick={() => dispatch(deleteContact(id))}>dalet</Button>\n                    </li>\n                ))}\n            </ul>\n            )}      \n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"Filter_conteiner__q6alg\",\"list\":\"Filter_list__MGRK8\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { filterSelector, newContactSelector } from \"redux/selector\";\nimport { deleteContact } from \"redux/contactc/operations\";\nimport { contactSearch } from \"../../redux/sliceFilter\";\nimport { Input, Button, Link} from '@chakra-ui/react'\n\nimport css from './Filter.module.css'\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n    const newContact = useSelector(newContactSelector)\n    const filter = useSelector(filterSelector)\n\n  function filterContact() {\n    return newContact.filter(item => {\n      return item.name.toLowerCase().includes(filter.toLowerCase())\n    })\n  }\n\n    return (\n    <div className={css.conteiner}>\n        <Input placeholder='Find contacts by name'  type=\"text\" name=\"filter\"  onChange={(e) => dispatch(contactSearch(e.target.value))} />\n        {filter !== '' && (\n            <ul>\n            {filterContact().map(({ name, id, number }) => (\n                <li key={id} className={css.list}>\n                    <div>{name}: <Link color='teal.500' href={\"tel:\" + number}>{number}</Link></div>\n                    <Button colorScheme='red' size='sm' type='button' onClick={() => dispatch(deleteContact(id))}>dalet</Button>\n                </li>\n            ))}\n        </ul>\n        )}\n    </div>\n    )\n}\n\n\n// class Filter extends Component {\n//     render() {\n//         const { filterContact, addFind, filter, dalet } = this.props;\n//         const filt = filterContact();\n//         return (\n//         <div>\n//             <p>Find contacts by name</p>\n//             <input type=\"text\" name=\"filter\" value={filter} onChange={addFind} />\n//             {filter !== '' && (\n//                 <ul>\n//                 {filt.map(({ name, id, number }) => (\n//                     <li key={id}>\n//                         {name}: {number}\n//                         <button type='button' onClick={() => dalet(id)}>dalet</button>\n//                     </li>\n//                 ))}\n//             </ul>\n//             )}\n\n//         </div>\n//     )\n// }\n// };\n\n// export {Filter}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\"};","import { useState } from 'react'\nimport css from './Phonebook.module.css'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contactc/operations';\nimport { isLoadingSelector, newContactSelector } from 'redux/selector';\nimport { Input, Button  } from '@chakra-ui/react'\n\n    \n\nexport const Phonebook = () => {\n    const [name, setName] = useState('');\n    const [phone, setNumber] = useState('');\n    const dispatch = useDispatch()\n    const newContact = useSelector(newContactSelector)\n    const isLoding = useSelector(isLoadingSelector)\n\n    \n    function onNewContact(e) {\n        const { name, value = name.value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            case 'number':\n                setNumber(value)\n                break;\n            default:\n                break;\n        }\n    };\n\n    function clearField() {\n        setName('')\n        setNumber('')\n    }\n\n    function createContact(e) {\n        e.preventDefault()\n\n        let check = newContact.find((element) => {\n            return element.name.toLowerCase() === name.toLowerCase()\n        })\n        if (check) {\n            alert(`${name} is already in contacts.`)\n            return\n        }\n\n        let contact = {\n            name: name,\n            number: phone\n        }\n        dispatch(addContact(contact))\n        clearField()\n    };\n\n    return (\n        <div>\n            <form className={css.form} onSubmit={createContact}>\n            \n                <label className={css.label} htmlFor=\"1\">Name</label>\n                <Input\n                    className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={onNewContact}\n                    id={1}\n                />\n\n                <label htmlFor=\"2\">Number</label>\n                <Input\n                    className={css.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={phone}\n                    onChange={onNewContact}\n                    id={2}\n                />\n                <Button type=\"submit\"  colorScheme='green' disabled={isLoding}>Add contact</Button>\n            </form>\n        </div>\n    )\n};\n\n\n\n// class Phonebook extends Component {\n//     state = {\n//         name: '',\n//         number: ''\n//     };\n\n//     onNewContact = e => {\n//         const {name, value = name.value} = e.target\n//         this.setState({ [name]: value })\n\n//     };\n//     createContact = (e) => {\n//         e.preventDefault()\n\n//         const item = {\n//             id: nanoid(),\n//             name: this.state.name,\n//             number: this.state.number,\n//         }\n\n//         let check = this.props.contacts.find((element) => {\n//             return element.name.toLowerCase() === item.name.toLowerCase()\n//         })\n\n//         if (check) {\n//             alert(`${item.name} is already in contacts.`)\n//             return\n//         }\n\n//         this.props.addContactNew(item)\n//         this.clearField()\n//     };\n\n//     clearField = () => {\n//         this.setState({name: '',number: ''})\n//     }\n    \n//     render() {\n\n//         return (\n//             <div>\n//                 <form className={css.form} onSubmit={this.createContact}>\n            \n//                     <label className={css.label} htmlFor=\"1\">Name</label>\n//                     <input\n//                         className={css.input}\n//                         type=\"text\"\n//                         name=\"name\"\n//                         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                         required\n//                         value={this.state.name}\n//                         onChange={this.onNewContact}\n//                         id={1}\n//                     />\n\n//                     <label htmlFor=\"2\">Number</label>\n//                     <input\n//                         className={css.input}\n//                         type=\"tel\"\n//                         name=\"number\"\n//                         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                         required\n//                         value={this.state.number}\n//                         onChange={this.onNewContact}\n//                         id={2}\n//                     />\n//                     <button type=\"submit\">Add contact</button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// };\n\n// export { Phonebook };","// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"Contacts_conteiner__rftAr\",\"title\":\"Contacts_title__NwpSb\",\"titleContacts\":\"Contacts_titleContacts__9dcvH\"};","import { Contact } from \"components/Contact/Contact\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contactc/operations\";\nimport css from './Contacts.module.css'\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  \n\n\n  useEffect( () =>{\n    dispatch(fetchContacts())\n  },[dispatch]);\n  \n    return (\n    \n      <div className={css.conteiner}>\n         <h1 className={css.title}>Phonebook</h1>\n         <Phonebook />\n         <h2  className={css.titleContacts}>Contacts</h2>\n         <Filter/>\n         <Contact/>\n       </div>\n    \n);\n}","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["Link","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","isExternal","rest","jsx","chakra","target","rel","cx","__css","displayName","Contact","dispatch","useDispatch","isLoading","useSelector","isLoadingSelector","filter","filterSelector","contacts","newContactSelector","css","type","color","map","name","id","number","href","colorScheme","size","onClick","deleteContact","Filter","newContact","I","placeholder","onChange","e","contactSearch","value","item","toLowerCase","includes","Phonebook","useState","setName","phone","setNumber","isLoding","onNewContact","onSubmit","preventDefault","find","element","alert","contact","addContact","htmlFor","pattern","title","required","disabled","Contacts","useEffect","fetchContacts","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","useMultiStyleConfig","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","_a","_b","dataAttr","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","context","field","helperText","useFormControl","_c","readOnly","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className"],"sourceRoot":""}